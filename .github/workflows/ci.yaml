name: RiscV watcher CI
run-name: ${{ github.actor }} is testing out GitHub Actions
on: [push]
permissions:
  contents: write

jobs:
  frontend_ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - run: npm ci
        working-directory: ./frontend
      - run: npm run build --if-present
        working-directory: ./frontend
      - run: npm test
        working-directory: ./frontend

  rpm_analyzer_ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'
      - name: Install dependencies
        run: go get .
        working-directory: ./RPM-analyzer/
      - name: Build
        run: go build -v ./
        working-directory: ./RPM-analyzer/
      - name: Test with the Go CLI
        working-directory: ./RPM-analyzer/
        run: go test
      - name: Get the Path Version
        id: get_path
        uses: reecetech/version-increment@2023.9.3
        if: github.ref == 'refs/heads/vldf/ci-cd'
      - name: Get the Version
        id: get_version
        if: github.ref == 'refs/heads/vldf/ci-cd'
        run: |
          export VER="v$(cat VERSION).$(echo ${{ steps.get_path.outputs.patch-version }}-analyzer)"
          echo "VERSION=$VER" >> $GITHUB_ENV
          echo "version is $VER"
      - name: Create the Release
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./RPM-analyzer/binary_watcher
          name: rpm-analyzer
          tag_name: ${{ env.VERSION }}

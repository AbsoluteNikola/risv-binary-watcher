name: RiscV watcher CI
run-name: ${{ github.actor }} is running their pipeline
on: [push]
permissions:
  contents: write
  packages: write

jobs:
  viewer_ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - run: npm ci
        working-directory: ./Viewer
      - run: npm run build-cicd
        working-directory: ./Viewer
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
      - name: Get the Version
        id: get_version
        if: github.ref == 'refs/heads/vldf/ci-cd'
        run: |
          export VER="v$(cat VERSION).$(echo ${{ steps.get_path.outputs.patch-version }}-viewer)"
          echo "VERSION=$VER" >> $GITHUB_ENV
          echo "version is $VER"
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./Viewer/Dockerfile
          push: true
          tags: ${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

  rpm_analyzer_ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'
      - name: Install dependencies
        run: go get .
        working-directory: ./RPM-analyzer/
      - name: Build
        run: go build -v ./
        working-directory: ./RPM-analyzer/
      - name: Test with the Go CLI
        working-directory: ./RPM-analyzer/
        run: go test
      - name: Get the Path Version
        id: get_path
        uses: reecetech/version-increment@2023.9.3
        if: github.ref == 'refs/heads/vldf/ci-cd'
      - name: Get the Version
        id: get_version
        if: github.ref == 'refs/heads/vldf/ci-cd'
        run: |
          export VER="v$(cat VERSION).$(echo ${{ steps.get_path.outputs.patch-version }}-analyzer)"
          echo "VERSION=$VER" >> $GITHUB_ENV
          echo "version is $VER"
      - name: Create the Release
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            ./RPM-analyzer/binary_watcher
          name: rpm-analyzer
          tag_name: ${{ env.VERSION }}
